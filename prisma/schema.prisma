generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  MODERATOR
}

enum AuthProvider {
  LOCAL
  GOOGLE
  FACEBOOK
  TWITTER
  GITHUB
}

model User {
  id        String  @id @default(uuid())
  email     String  @unique
  password  String
  firstName String? @map("first_name")
  lastName  String? @map("last_name")
  role      Role    @default(USER)
  isActive  Boolean @default(true) @map("is_active")

  // OAuth fields
  googleId   String?      @unique
  facebookId String?      @unique
  twitterId  String?      @unique
  githubId   String?      @unique
  provider   AuthProvider @default(LOCAL)
  avatar     String?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  refreshTokens RefreshToken[]

  @@map("users")
}

model RefreshToken {
  id        String  @id @default(uuid())
  token     String  @unique
  userId    String  @map("user_id")
  deviceId  String? @map("device_id")
  userAgent String? @map("user_agent")
  ipAddress String? @map("ip_address")

  expiresAt DateTime  @map("expires_at")
  createdAt DateTime  @default(now()) @map("created_at")
  isRevoked Boolean   @default(false) @map("is_revoked")
  revokedAt DateTime? @map("revoked_at")

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([token])
  @@map("refresh_tokens")
}
